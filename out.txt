**********************************************
*                                            *
*                 similar_01                  *
*                                            *
**********************************************
Alphabet: [ y, n, 1, 0, . ]
States : [ scanright, to_first_1, to_last_1, erase_1, back, to_first_0, HALT, STOP ]
Initial : scanright
Finals : [ HALT, STOP ]
(back, .) -> (HALT, y, LEFT)
(back, 0) -> (HALT, n, LEFT)
(back, 1) -> (to_first_0, 1, LEFT)
(erase_1, 1) -> (back, ., LEFT)
(scanright, 0) -> (to_first_1, ., RIGHT)
(scanright, 1) -> (HALT, n, RIGHT)
(to_first_0, .) -> (scanright, ., RIGHT)
(to_first_0, 0) -> (to_first_0, 0, LEFT)
(to_first_0, 1) -> (to_first_0, 1, LEFT)
(to_first_1, 0) -> (to_first_1, 0, RIGHT)
(to_first_1, 1) -> (to_last_1, 1, RIGHT)
(to_last_1, .) -> (erase_1, ., LEFT)
(to_last_1, 0) -> (HALT, n, RIGHT)
(to_last_1, 1) -> (to_last_1, 1, RIGHT)
*****************************************************************************
[<0>01.] (scanright, 0) -> (to_first_1, ., RIGHT)
[.<0>1.] (to_first_1, 0) -> (to_first_1, 0, RIGHT)
[.0<1>.] (to_first_1, 1) -> (to_last_1, 1, RIGHT)
[.01<.>] (to_last_1, .) -> (erase_1, ., LEFT)
[.0<1>.] (erase_1, 1) -> (back, ., LEFT)
[.<0>..] (back, 0) -> (HALT, n, LEFT)

=== RESULT ===
[<.>n..] 
